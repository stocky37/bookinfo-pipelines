apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: apply
spec:
  workspaces:
  - name: src

  params:
  - name: app-name
    type: string
  - name: git-repo-url
    type: string
  - name: git-revision
    type: string
    default: master
  - name: target-namespace
    type: string
    description: Namespace to apply resources into
  - name: resources-dir
    type: string
    description: Location of the resources to apply
    default: .k8s/resources

  tasks:
  - name: clone
    taskRef:
      name: git-clone
    params:
    - name: url
      value: $(params.git-repo-url)
    - name: revision
      value: $(params.git-revision)
    - name: deleteExisting
      value: 'true'
    workspaces:
    - name: output
      workspace: src

  - name: apply
    taskRef:
      name: oc
    runAfter: ["clone"]
    params:
    - name: ARGS
      value: 
      - apply
      - -f
      - "$(params.resources-dir)"
      - -n
      - "$(params.target-namespace)"
    workspaces:
    - name: src
      workspace: src
    
  - name: wait
    taskRef:
      name: oc
    runAfter: ["apply"]
    params:
    - name: ARGS
      value:
      - rollout
      - status
      - "dc/$(params.app-name)"
      - -n
      - "$(params.target-namespace)"
      - -w
    workspaces:
    - name: src
      workspace: src

  - name: test
    taskRef:
      name: oc
    runAfter: ["wait"]
    params:
    - name: ARGS
      value:
      - rsh
      - "dc/$()" bash -c 'mongo -u $MONGODB_USER -p $MONGODB_PASSWORD $MONGODB_DATABASE --quiet --eval "db.ratings.find()"'
      - status
      - "dc/$(params.app-name)"
      - -n
      - "$(params.target-namespace)"
      - -w
    workspaces:
    - name: src
      workspace: src