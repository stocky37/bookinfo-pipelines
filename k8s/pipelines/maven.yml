apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: maven
  namespace: demo-tekton-cicd
spec:
  workspaces:
    - name: source
    - name: maven-settings
    - name: maven-repo

  params:
    - name: git-url
      type: string
      description: git url to clone

    - name: git-revision
      type: string
      description: git revision to checkout (branch, tag, sha, refâ€¦)

    - name: app-name
      type: string
      description: application name

    - name: tag
      type: string
      default: latest
      description: image tag to build

    - name: dockerfile
      type: string
      default: src/main/docker/Dockerfile.fast-jar
      description: path to the Dockerfile

    # todo: use a volumeclaimtemplate instead
    - name: deploy-workspace-claim
      type: string
      default: k8s-src
      description: claim to use for deployment pipeline

    - name: deploy-pipeline
      type: string
      default: deploy
      description: deployment pipeline to run

    - name: deploy-namespace
      type: string
      description: namespace to deploy to

    - name: deploy-pipeline-prefix
      type: string
      description: prefix for the deployment pipeline

    - name: maven-goals
      type: array
      default:
        - package
        - -Dquarkus.package.type=fast-jar
      description: Goals to run in the maven command

  tasks:
    - name: clone
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: source
      params:
        - name: url
          value: $(params.git-url)
        - name: deleteExisting
          value: 'true'

    - name: maven
      taskRef:
        name: maven
      runAfter:
        - clone
      workspaces:
        - name: source
          workspace: source
        - name: maven-settings
          workspace: maven-settings
        - name: maven-repo
          workspace: maven-repo
      params:
        - name: GOALS
          value: 
            - $(params.maven-goals)

    - name: buildah
      taskRef:
        name: buildah
        kind: ClusterTask
      runAfter:
        - maven
      workspaces:
        - name: source
          workspace: source
      params:
        - name: IMAGE
          value: image-registry.openshift-image-registry.svc:5000/demo-tekton-cicd/$(params.app-name):$(params.tag)
        - name: DOCKERFILE
          value: $(params.dockerfile)
        - name: TLSVERIFY
          value: 'false'

    - name: deploy
      taskRef:
        name: tkn
        kind: ClusterTask
      runAfter:
        - buildah
      params:
        - name: ARGS
          value:
            - pipeline
            - start
            - $(params.deploy-pipeline)
            - --labels=pipeline=$(params.app-name)
            - --prefix-name=$(params.deploy-pipeline-prefix)
            - --workspace=name=source,claimName=$(params.deploy-workspace-claim)
            - --param=app-name=$(params.app-name)
            - --param=namespace=$(params.deploy-namespace)
            - --use-param-defaults
