apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: maven
spec:
  workspaces:
    - name: source
    - name: maven-settings

  params:
    - name: gitUrl
      type: string
      description: Git URL of repository to build

    - name: namespace
      type: string
      description: Namespace to push image to

    - name: name
      type: string
      description: Name of image to build

    - name: tag
      type: string
      default: latest
      description: Tag of image to build

    - name: dockerfile
      type: string
      default: Dockerfile
      description: Path to the Dockerfile to build

    - name: deployWorkspaceClaim
      type: string
      default: k8s-src
      description: Name of the PVC to use for the deployment pipeline source workspace

    - name: deployPipeline
      type: string
      default: deploy
      description: Name of the deployment pipeline to run

    - name: mavenGoals
      type: array
      default:
        - package
      description: Goals to run in the maven command

  tasks:
    - name: clone
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: source
      params:
        - name: url
          value: $(params.gitUrl)
        - name: deleteExisting
          value: 'true'

    - name: maven
      taskRef:
        name: maven
        kind: ClusterTask
      runAfter:
        - clone
      workspaces:
        - name: source
          workspace: source
        - name: maven-settings
          workspace: maven-settings
      params:
        - name: GOALS
          value: $(params.mavenGoals)

    - name: buildah
      taskRef:
        name: buildah
        kind: ClusterTask
      runAfter:
        - maven
      workspaces:
        - name: source
          workspace: source
      params:
        - name: IMAGE
          value: image-registry.openshift-image-registry.svc:5000/$(params.namespace)/$(params.name):$(params.tag)
        - name: DOCKERFILE
          value: $(params.dockerfile)
        - name: TLSVERIFY
          value: 'false'

    - name: deploy
      taskRef:
        name: tkn
        kind: ClusterTask
      runAfter:
        - buildah
      params:
        - name: ARGS
          value:
            - pipeline
            - start
            - $(params.deployPipeline)
            - --workspace=name=source,claimName=$(params.deployWorkspaceClaim)
            - --use-param-defaults
